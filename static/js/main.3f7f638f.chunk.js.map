{"version":3,"sources":["components/Header.js","utils.js","pages/Home.js","components/SingleSearchCardSkeleton.js","components/SingleSearchCard.js","components/Loader.js","pages/Search.js","pages/Detail.js","components/FavouriteMovieCard.js","components/Footer.js","pages/NotFound.js","App.js","index.js"],"names":["Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","Header","_","navigate","useNavigate","Box","sx","flexGrow","AppBar","Toolbar","Typography","variant","noWrap","component","xs","sm","to","style","textDecoration","background","boxShadow","Button","onClick","replace","placeholder","inputProps","onKeyUp","e","code","query","target","value","omdb","axios","baseURL","timeout","params","apikey","Detail","id","useParams","useState","data","setData","flag","setFlag","useLocalStorage","favourites","setFavourites","isFavourite","setFavourite","useEffect","JSON","parse","includes","get","response","Response","Country","length","flags","svg","p","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","flexWrap","Stack","direction","gap","src","Poster","alt","border","margin","Title","Chip","label","IconButton","size","favs","idx","indexOf","splice","push","stringify","Released","mt","mb","m","Actors","split","map","i","Writer","Director","outline","outlineOffset","align","Plot","SingleSearchCardSkeleton","Card","Skeleton","animation","CardContent","SingleSearchCard","showSkeleton","setShowSkeleton","setTimeout","imdbID","CardMedia","image","Year","Type","textTransform","Loader","CircularProgress","list","setList","useSearchParams","totalRecords","setTotalRecords","has","pl","pageStart","loadMore","pageNo","Math","floor","totalResults","orignalList","hasMore","loader","FavouriteMovieCard","Grid","item","CardActionArea","Footer","pb","opacity","href","rel","Home","backgroundRepeat","textAlign","borderBottom","Masonry","columns","App","path","element","NotFound","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3f7f638f.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25)\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\"\r\n  }\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\"\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"19ch\",\r\n      \"&:focus\": {\r\n        width: \"29ch\"\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nconst Header = (_) => {\r\n  const navigate = useNavigate();\r\n\r\n  const keyPressed = (e) => {\r\n    if (e.code === \"Enter\") {\r\n      const query = e.target.value;\r\n      navigate(`/search?q=${query}`);\r\n      // console.log(query);\r\n    }\r\n  };\r\n  const handleClick = () => {\r\n    // 👇️ replace set to true\r\n    navigate(\"/About\", { replace: true });\r\n  };\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"#83cbff\",\r\n                // lin: \"#1976d2 #04619\r\n                // \",\r\n                background: \"linear-gradient(to right bottom, #83cbff, #000)\",\r\n                boxShadow: \"10px 10px 25px #fffffd\"\r\n              }}\r\n            >\r\n              🎞️Movie-Fi\r\n            </Link>\r\n          </Typography>\r\n          <Button variant=\"\" onClick={handleClick}>\r\n            About\r\n          </Button>\r\n          {/* <Link to={About}>About</Link> */}\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Movies,Series,Games,Bio,etc...\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n              onKeyUp={keyPressed}\r\n            />\r\n          </Search>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst omdb = axios.create({\r\n  baseURL: \"https://www.omdbapi.com/\",\r\n  timeout: 15000,\r\n  params: {\r\n    apikey: \"cb2848f\"\r\n  }\r\n});\r\n\r\nexport { omdb };\r\n","// importing the react and npm pckgs Witth dependency Libarries\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { omdb } from \"../utils\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Chip, Stack, Typography, IconButton } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport useLocalStorage from \"use-local-storage\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Detail = (_) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState({});\r\n  const [flag, setFlag] = useState(false);\r\n  const [favourites, setFavourites] = useLocalStorage(\"favourites\", \"[]\"); // used Local storage for web browser\r\n  const [isFavourite, setFavourite] = useState(false); // chechking if user clicked Bookmark or not\r\n\r\n  //\r\n  useEffect(\r\n    (_) => {\r\n      const favs = JSON.parse(favourites);\r\n      if (favs.includes(id)) {\r\n        setFavourite(true);\r\n      } else {\r\n        setFavourite(false);\r\n      }\r\n    },\r\n    [favourites, id]\r\n  );\r\n\r\n  const toggleFavourite = (_) => {\r\n    const favs = JSON.parse(favourites);\r\n    if (isFavourite) {\r\n      const idx = favs.indexOf(id);\r\n      favs.splice(idx, 1);\r\n      setFavourite(false);\r\n    } else {\r\n      favs.push(id);\r\n      setFavourite(true);\r\n    }\r\n    setFavourites(JSON.stringify(favs));\r\n  };\r\n\r\n  // use effect for tracking the dynamic changes on pgg\r\n  useEffect(\r\n    (_) => {\r\n      (async (_) => {\r\n        const response = await omdb.get(`?i=${id}&plot=full`);\r\n        if (response.data.Response === \"False\") {\r\n          navigate(\"/404\");\r\n        } else {\r\n          setData(response.data);\r\n        }\r\n      })();\r\n    },\r\n    [id, navigate]\r\n  );\r\n\r\n  useEffect(\r\n    (_) => {\r\n      if (data.Country?.length > 0) {\r\n        (async (_) => {\r\n          const response = await axios.get(\r\n            `https://restcountries.com/v3.1/name/${data.Country}?fullText=true`\r\n          );\r\n          setFlag(response.data[0]?.flags?.svg);\r\n        })();\r\n      }\r\n    },\r\n    [data]\r\n  );\r\n\r\n  // Adding A BgIMg with style obj\r\n\r\n  const DetailsBacground = {\r\n    backgroundImage: `url(\"https://images.pexels.com/photos/14267038/pexels-photo-14267038.jpeg?auto=compress&cs=tinysrgb&w=600\") `,\r\n    backgroundSize: \"cover\",\r\n    color: \"white\",\r\n    // backgroundRepeat: \"repeat - y\",\r\n    // width: \"100vw\",\r\n    // height: \"100vh\",\r\n    backgroundPosition: \"center\",\r\n    backgroundAttachment: \"fixed\",\r\n    flexWrap: \"wrap\"\r\n  };\r\n  return (\r\n    <>\r\n      <Box p={5} sx={DetailsBacground}>\r\n        {/* // back Btn to home */}\r\n        <Button variant=\"outlined\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </Button>\r\n        <Typography>🔹🔹🔹</Typography>\r\n        <Stack sx={{ flexWrap: \"wrap\" }}>\r\n          <Stack\r\n            direction=\"row\"\r\n            // spacing={0}\r\n            gap={2}\r\n            sx={{\r\n              flexWrap: \"wrap\"\r\n            }}\r\n          >\r\n            <img\r\n              src={\r\n                data.Poster !== \"N/A\"\r\n                  ? data.Poster\r\n                  : \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\r\n              }\r\n              alt=\"Poster\"\r\n            />\r\n\r\n            <Stack border={1}>\r\n              <Stack margin={1}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"primary\"\r\n                  backgroundColor=\"black\"\r\n                  p={1}\r\n                >\r\n                  {data.Title}\r\n                  &nbsp; &nbsp; &nbsp;\r\n                  <Chip\r\n                    label=\"Add to Favorite➡️\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                  ></Chip>\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    color=\"error\"\r\n                    onClick={toggleFavourite}\r\n                  >\r\n                    {isFavourite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n                  </IconButton>\r\n                </Typography>\r\n                <Typography>Released On - {data.Released}</Typography>\r\n                <Typography variant=\"h5\" mt={3} mb={1}>\r\n                  Crew :\r\n                </Typography>\r\n                <Stack direction=\"row\" gap={1} sx={{ flexWrap: \"wrap\" }} m={1}>\r\n                  {data.Actors?.split(\", \").map((e, i) => {\r\n                    return (\r\n                      <Chip\r\n                        key={i}\r\n                        label={e}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      />\r\n                    );\r\n                  })}\r\n                </Stack>\r\n\r\n                <Stack direction=\"row\" gap={1} sx={{ flexWrap: \"wrap\" }}>\r\n                  <Typography>Written By :</Typography>\r\n                  {data.Writer?.split(\", \").map((e, i) => {\r\n                    return (\r\n                      <Chip\r\n                        key={i}\r\n                        label={e}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      />\r\n                    );\r\n                  })}\r\n                </Stack>\r\n                <Stack direction=\"row\" m={1} sx={{ flexWrap: \"wrap\" }}>\r\n                  <Typography>Directed By : </Typography>\r\n                  <Chip\r\n                    label={data.Director}\r\n                    // label=\"Chip Outlined\"\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Stack>\r\n                <Stack mt={5} direction=\"row\" spacing={2} alignItems=\"center\">\r\n                  <Typography>Country: </Typography>\r\n                  {flag ? (\r\n                    <img\r\n                      src={flag}\r\n                      height={40}\r\n                      alt=\"Flag\"\r\n                      style={{\r\n                        outline: \"1px solid #1976d2\",\r\n                        outlineOffset: \"2px\"\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    false\r\n                  )}\r\n                  <Typography variant=\"overline\">{data.Country}</Typography>\r\n                </Stack>\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n\r\n          <Typography variant=\"h4\" mt={5} mb={2}>\r\n            Plot 📝:\r\n          </Typography>\r\n          <Typography align=\"justify\">{data.Plot}</Typography>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import * as React from \"react\";\r\nimport { Card, Stack, Skeleton, CardContent } from \"@mui/material\";\r\n\r\nconst SingleSearchCardSkeleton = (_) => {\r\n  return (\r\n    <Card sx={{ display: \"flex\" }}>\r\n      <Skeleton\r\n        variant=\"rectangular\"\r\n        width={126}\r\n        height={180}\r\n        animation=\"wave\"\r\n      />\r\n      <CardContent>\r\n        <Stack spacing={1} alignItems=\"flex-start\" justifyContent=\"flex-start\">\r\n          <Skeleton width=\"50ch\" height=\"2.5rem\" animation=\"wave\" />\r\n          <Skeleton width=\"50%\" height=\"1.5rem\" animation=\"wave\" />\r\n          <Skeleton width=\"10ch\" height=\"2rem\" animation=\"wave\" />\r\n        </Stack>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SingleSearchCardSkeleton;\r\n","import { useState, useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Chip } from \"@mui/material\";\r\nimport { Stack } from \"@mui/material\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport SingleSearchCardSkeleton from \"./SingleSearchCardSkeleton\";\r\n\r\nconst SingleSearchCard = ({ data }) => {\r\n  const [showSkeleton, setShowSkeleton] = useState(true);\r\n\r\n  useEffect((_) => {\r\n    setTimeout((_) => setShowSkeleton(false), 10000);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showSkeleton ? (\r\n        <SingleSearchCardSkeleton />\r\n      ) : (\r\n        <Card sx={{ display: \"flex\" }}>\r\n          <Link to={`/detail/${data.imdbID}`}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              sx={{ width: 126 }}\r\n              image={\r\n                data.Poster !== \"N/A\"\r\n                  ? data.Poster\r\n                  : \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\r\n              }\r\n              alt=\"Live from space album cover\"\r\n            />\r\n          </Link>\r\n\r\n          <CardContent>\r\n            <Stack\r\n              spacing={1}\r\n              alignItems=\"flex-start\"\r\n              justifyContent=\"flex-start\"\r\n            >\r\n              <Link to={`/detail/${data.imdbID}`}>\r\n                <Typography component=\"div\" variant=\"h5\">\r\n                  {data.Title}\r\n                </Typography>\r\n              </Link>\r\n              <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n                Released Year - {data.Year}\r\n              </Typography>\r\n              <Typography variant=\"subtitle4\" color=\"text.secondary\">\r\n                Type |--\r\n                <Chip\r\n                  label={data.Type}\r\n                  variant=\"outlined\"\r\n                  sx={{ textTransform: \"capitalize\" }}\r\n                />\r\n              </Typography>\r\n              {/* <Typography color=\"text.secondary\">Type:-</Typography>\r\n              <Chip label={data.Type} sx={{ textTransform: \"capitalize\" }} /> */}\r\n            </Stack>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SingleSearchCard;\r\n","import { CircularProgress, Card, Stack } from \"@mui/material\";\r\nconst Loader = (_) => {\r\n  return (\r\n    <Card mt={3}>\r\n      <Stack p={1} alignItems=\"center\">\r\n        <CircularProgress />\r\n      </Stack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { omdb } from \"../utils\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport SingleSearchCard from \"../components/SingleSearchCard\";\r\nimport { Box, Stack, Typography } from \"@mui/material\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n//  Added loader while data is fetching\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst Search = (_) => {\r\n  const [list, setList] = useState([]);\r\n  // used hook of of checking params and serched on key Enter\r\n  const [params] = useSearchParams();\r\n  //👇🏻 By using this state we can see the total records and data we get\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(\r\n    // checking the Query is valid or using params\r\n    (_) => {\r\n      if (params.has(\"q\") && params.get(\"q\") !== \"\") {\r\n        setList([]);\r\n      }\r\n    },\r\n    [params]\r\n  );\r\n\r\n  // Loading data functions and load more\r\n  const loadData = () => {\r\n    (async (_) => {\r\n      const pageNo = Math.floor(list.length / 10) + 1;\r\n      const response = await omdb.get(`?s=${params.get(\"q\")}&page=${pageNo}`);\r\n\r\n      if (response.data.Response === \"False\") {\r\n        if (pageNo === 1) {\r\n          navigate(\"/404\");\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n\r\n      setTotalRecords(response.data.totalResults);\r\n      setList((orignalList) => {\r\n        return [...orignalList, ...response.data.Search];\r\n      });\r\n    })();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box p={5}>\r\n        <Typography\r\n          variant=\"h6\"\r\n          backgroundColor=\"#594756 \"\r\n          color=\"white\"\r\n          pl={1}\r\n        >\r\n          {totalRecords} results found\r\n        </Typography>\r\n\r\n        <InfiniteScroll\r\n          pageStart={1}\r\n          loadMore={loadData}\r\n          hasMore={totalRecords === 0 || list.length < totalRecords}\r\n          loader={<Loader key={0} />}\r\n        >\r\n          <Stack spacing={3} mt={1} mb={3}>\r\n            {list.map((e, idx) => {\r\n              return <SingleSearchCard data={e} key={idx} />;\r\n            })}\r\n          </Stack>\r\n        </InfiniteScroll>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","// importing the react and npm pckgs Witth dependency Libarries\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { omdb } from \"../utils\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Chip, Stack, Typography, IconButton } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport useLocalStorage from \"use-local-storage\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst Detail = (_) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState({});\r\n  const [flag, setFlag] = useState(false);\r\n  const [favourites, setFavourites] = useLocalStorage(\"favourites\", \"[]\"); // used Local storage for web browser\r\n  const [isFavourite, setFavourite] = useState(false); // chechking if user clicked Bookmark or not\r\n\r\n  //\r\n  useEffect(\r\n    (_) => {\r\n      const favs = JSON.parse(favourites);\r\n      if (favs.includes(id)) {\r\n        setFavourite(true);\r\n      } else {\r\n        setFavourite(false);\r\n      }\r\n    },\r\n    [favourites, id]\r\n  );\r\n\r\n  const toggleFavourite = (_) => {\r\n    const favs = JSON.parse(favourites);\r\n    if (isFavourite) {\r\n      const idx = favs.indexOf(id);\r\n      favs.splice(idx, 1);\r\n      setFavourite(false);\r\n    } else {\r\n      favs.push(id);\r\n      setFavourite(true);\r\n    }\r\n    setFavourites(JSON.stringify(favs));\r\n  };\r\n\r\n  // use effect for tracking the dynamic changes on pgg\r\n  useEffect(\r\n    (_) => {\r\n      (async (_) => {\r\n        const response = await omdb.get(`?i=${id}&plot=full`);\r\n        if (response.data.Response === \"False\") {\r\n          navigate(\"/404\");\r\n        } else {\r\n          setData(response.data);\r\n        }\r\n      })();\r\n    },\r\n    [id, navigate]\r\n  );\r\n\r\n  useEffect(\r\n    (_) => {\r\n      if (data.Country?.length > 0) {\r\n        (async (_) => {\r\n          const response = await axios.get(\r\n            `https://restcountries.com/v3.1/name/${data.Country}?fullText=true`\r\n          );\r\n          setFlag(response.data[0]?.flags?.svg);\r\n        })();\r\n      }\r\n    },\r\n    [data]\r\n  );\r\n\r\n  // Adding A BgIMg with style obj\r\n\r\n  const DetailsBacground = {\r\n    backgroundImage: `url(\"https://images.pexels.com/photos/14267038/pexels-photo-14267038.jpeg?auto=compress&cs=tinysrgb&w=600\") `,\r\n    backgroundSize: \"cover\",\r\n    color: \"white\",\r\n    // backgroundRepeat: \"repeat - y\",\r\n    // width: \"100vw\",\r\n    // height: \"100vh\",\r\n    backgroundPosition: \"center\",\r\n    backgroundAttachment: \"fixed\",\r\n    flexWrap: \"wrap\"\r\n  };\r\n  return (\r\n    <>\r\n      <Box p={5} sx={DetailsBacground}>\r\n        {/* // back Btn to home */}\r\n        <Button variant=\"outlined\" onClick={() => navigate(-1)}>\r\n          Back\r\n        </Button>\r\n        <Typography>🔹🔹🔹</Typography>\r\n        <Stack sx={{ flexWrap: \"wrap\" }}>\r\n          <Stack\r\n            direction=\"row\"\r\n            // spacing={0}\r\n            gap={2}\r\n            sx={{\r\n              flexWrap: \"wrap\"\r\n            }}\r\n          >\r\n            <img\r\n              src={\r\n                data.Poster !== \"N/A\"\r\n                  ? data.Poster\r\n                  : \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\r\n              }\r\n              alt=\"Poster\"\r\n            />\r\n\r\n            <Stack border={1}>\r\n              <Stack margin={1}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"primary\"\r\n                  backgroundColor=\"black\"\r\n                  p={1}\r\n                >\r\n                  {data.Title}\r\n                  &nbsp; &nbsp; &nbsp;\r\n                  <Chip\r\n                    label=\"Add to Favorite➡️\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                  ></Chip>\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    color=\"error\"\r\n                    onClick={toggleFavourite}\r\n                  >\r\n                    {isFavourite ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n                  </IconButton>\r\n                </Typography>\r\n                <Typography>Released On - {data.Released}</Typography>\r\n                <Typography variant=\"h5\" mt={3} mb={1}>\r\n                  Crew :\r\n                </Typography>\r\n                <Stack direction=\"row\" gap={1} sx={{ flexWrap: \"wrap\" }} m={1}>\r\n                  {data.Actors?.split(\", \").map((e, i) => {\r\n                    return (\r\n                      <Chip\r\n                        key={i}\r\n                        label={e}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      />\r\n                    );\r\n                  })}\r\n                </Stack>\r\n\r\n                <Stack direction=\"row\" gap={1} sx={{ flexWrap: \"wrap\" }}>\r\n                  <Typography>Written By :</Typography>\r\n                  {data.Writer?.split(\", \").map((e, i) => {\r\n                    return (\r\n                      <Chip\r\n                        key={i}\r\n                        label={e}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      />\r\n                    );\r\n                  })}\r\n                </Stack>\r\n                <Stack direction=\"row\" m={1} sx={{ flexWrap: \"wrap\" }}>\r\n                  <Typography>Directed By : </Typography>\r\n                  <Chip\r\n                    label={data.Director}\r\n                    // label=\"Chip Outlined\"\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Stack>\r\n                <Stack mt={5} direction=\"row\" spacing={2} alignItems=\"center\">\r\n                  <Typography>Country: </Typography>\r\n                  {flag ? (\r\n                    <img\r\n                      src={flag}\r\n                      height={40}\r\n                      alt=\"Flag\"\r\n                      style={{\r\n                        outline: \"1px solid #1976d2\",\r\n                        outlineOffset: \"2px\"\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    false\r\n                  )}\r\n                  <Typography variant=\"overline\">{data.Country}</Typography>\r\n                </Stack>\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n\r\n          <Typography variant=\"h4\" mt={5} mb={2}>\r\n            Plot 📝:\r\n          </Typography>\r\n          <Typography align=\"justify\">{data.Plot}</Typography>\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import { useEffect, useState } from \"react\";\r\nimport { omdb } from \"../utils\";\r\nimport { Grid, Card, CardMedia, CardActionArea } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FavouriteMovieCard = ({ id }) => {\r\n  // UseState hook For Dynamic Data\r\n  const [data, setData] = useState({});\r\n  // used Navigate hoook for Move to another pg\r\n  const navigate = useNavigate();\r\n\r\n  // Taking response if the data change\r\n  useEffect(\r\n    (_) => {\r\n      (async (_) => {\r\n        const response = await omdb.get(`?i=${id}`);\r\n        setData(response.data);\r\n      })();\r\n    },\r\n    [id]\r\n  );\r\n\r\n  // func - if Card Clicked it will Nav to Detail pg\r\n  const clicked = (_) => {\r\n    navigate(`/detail/${id}`);\r\n  };\r\n\r\n  // render to UI\r\n  return (\r\n    <>\r\n      {/* Created Grid For Fav movi card */}\r\n      <Grid item xs={3}>\r\n        <Card>\r\n          <CardActionArea onClick={clicked}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={\r\n                data.Poster !== \"N/A\"\r\n                  ? data.Poster\r\n                  : \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\r\n              }\r\n            />\r\n\r\n            {/* <CardContent>\r\n              <Typography variant=\"h2\">\r\n                {data.Title}\r\n              </Typography> \r\n            </CardContent>\r\n              */}\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavouriteMovieCard;\r\n","import { Box, Typography } from \"@mui/material\";\r\n\r\n//  Footer Sec Start\r\nconst Footer = (_) => {\r\n  return (\r\n    <Box pb={0.5}>\r\n      <Typography\r\n        variant=\"h6\"\r\n        align=\"center\"\r\n        backgroundColor=\"black\"\r\n        color=\"gray\"\r\n        opacity=\"0.2\"\r\n      >\r\n        - by shaikh_md.😎\r\n      </Typography>\r\n      <Typography variant=\"h6\" align=\"right\" background=\"\">\r\n        <a href=\"\" target=\"_blank\" rel=\"noreferrer\">\r\n          {/* You Can See the Src Code */}\r\n          💻Github Source Code\r\n        </a>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","// import * as React from \"react\";\r\nimport useLocalStorage from \"use-local-storage\";\r\nimport FavouriteMovieCard from \"../components/FavouriteMovieCard\";\r\nimport { Box, Chip, Typography } from \"@mui/material\";\r\nimport Masonry from \"@mui/lab/Masonry\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Home = (_) => {\r\n  // Add To Fav\r\n  const [favourites] = useLocalStorage(\"favourites\", \"[]\");\r\n\r\n  // Background Img Style Obj Here\r\n  const BgPosters = {\r\n    height: \"100vh\",\r\n    // width: \"65.7vw\",\r\n    padding: \"0rem\",\r\n    margin: \"1.2rem\",\r\n    backgroundImage: `url(\"https://cdn.pixabay.com/photo/2019/04/24/21/55/cinema-4153289__480.jpg\") `,\r\n    // backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    // color: \"black\",\r\n    backgroundPosition: \"right\",\r\n    // backgroundAttachment: \"fixed\",\r\n    opacity: \".9\"\r\n  };\r\n\r\n  const handleClick = () => {};\r\n\r\n  /*   Render UI*/\r\n  return (\r\n    <>\r\n      <Box style={BgPosters}>\r\n        {/*  Typography For LOGO */}\r\n        <Typography\r\n          variant=\"h6\"\r\n          backgroundColor=\"#594756 \"\r\n          textAlign=\"left\"\r\n          p={1}\r\n          color=\"white\"\r\n          borderBottom=\"1px dashed\"\r\n        >\r\n          Welcome to Moviesvere Collection.\r\n        </Typography>\r\n        {/* Title here */}\r\n        <Typography\r\n          variant=\"h6\"\r\n          backgroundColor=\"#594756 \"\r\n          textAlign=\"center\"\r\n          // p={0.5}\r\n          color=\"white\"\r\n        >\r\n          <Chip\r\n            label=\"Your 💓favorite Collection!!\"\r\n            variant=\"outlined\"\r\n            onClick={handleClick}\r\n          />\r\n        </Typography>\r\n\r\n        {/*  Div Section of Home And BookMark List wiil B shown Here... */}\r\n\r\n        <Box p={2}>\r\n          <Masonry columns={4} spacing={2}>\r\n            {JSON.parse(favourites).map((e, i) => {\r\n              return <FavouriteMovieCard id={e} key={i} />;\r\n            })}\r\n          </Masonry>\r\n        </Box>\r\n      </Box>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\n// exporting this Home page by default\r\n\r\nexport default Home;\r\n","import { Routes, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./pages/Home\";\r\nimport Search from \"./pages/Search\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NotFound from \"./pages/NotFound\";\r\n\r\nfunction App() {\r\n  // Adding BgIMg And with Style Obj\r\n  const BgPosters = {\r\n    // height: \"100vh\",\r\n\r\n    // color: \"white\",\r\n    backgroundPosition: \"center\",\r\n    backgroundAttachment: \"fixed\"\r\n    // opacity: \".1\",\r\n  };\r\n  return (\r\n    <>\r\n      <main style={BgPosters}>\r\n        <Header />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/search\" element={<Search />} />\r\n          <Route path=\"/detail/:id\" element={<Detail />} />\r\n          <Route path=\"/404\" element={<NotFound />} />\r\n        </Routes>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}